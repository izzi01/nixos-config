#!/usr/bin/env bash
# Unified build-switch script for Linux
# Auto-detects: Full NixOS vs Standalone Linux (Home Manager)

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Custom print function
_print() {
  echo -e "$1"
}

# Detect if running on full NixOS or standalone Linux
IS_NIXOS=false
if [[ -f /etc/NIXOS ]] || [[ -f /run/current-system/sw/bin/nixos-rebuild ]]; then
  IS_NIXOS=true
  _print "${BLUE}=== Detected: Full NixOS Installation ===${NC}"
else
  _print "${BLUE}=== Detected: Standalone Linux (Home Manager) ===${NC}"
fi

# Parse arguments for --host parameter
HOST=""
OTHER_ARGS=""

while [ $# -gt 0 ]; do
  case "$1" in
    --host=*)
      HOST="${1#*=}"
      shift
      ;;
    --host)
      HOST="$2"
      shift 2
      ;;
    *)
      OTHER_ARGS="$OTHER_ARGS $1"
      shift
      ;;
  esac
done

# Detect architecture
ARCH=$(uname -m)
case "$ARCH" in
  x86_64)
    ARCH="x86_64"
    ;;
  aarch64|arm64)
    ARCH="aarch64"
    ;;
  *)
    _print "${RED}Unsupported architecture: $ARCH${NC}"
    exit 1
    ;;
esac

# Determine the flake target
if [ -n "$HOST" ]; then
  FLAKE_TARGET="$HOST"
  _print "${YELLOW}Building for named host: $HOST${NC}"
else
  if [[ "$IS_NIXOS" == true ]]; then
    # NixOS uses architecture-based targets
    FLAKE_TARGET="${ARCH}-linux"
    _print "${YELLOW}Building for platform: $FLAKE_TARGET${NC}"
  else
    # Standalone Linux uses user@architecture format
    USERNAME=$(whoami)

    # Try to get username from flake.nix (if it's not a placeholder)
    if grep -q "user = \".*\";" flake.nix 2>/dev/null; then
      FLAKE_USER=$(grep "user = \".*\";" flake.nix | sed 's/.*user = "\(.*\)";.*/\1/' | head -1)
      # Only use flake.nix username if it's not a placeholder
      if [[ "$FLAKE_USER" != "%USER%" ]] && [[ -n "$FLAKE_USER" ]]; then
        USERNAME="$FLAKE_USER"
      fi
    fi

    FLAKE_TARGET="${USERNAME}@${ARCH}-linux"
    _print "${YELLOW}Building for user configuration: $FLAKE_TARGET${NC}"
  fi
fi

_print "${YELLOW}Starting build and switch...${NC}"
_print ""

# Apply configuration based on system type
if [[ "$IS_NIXOS" == true ]]; then
  # Full NixOS - use nixos-rebuild
  _print "${BLUE}Running: sudo nixos-rebuild switch --flake .#$FLAKE_TARGET $OTHER_ARGS${NC}"
  _print ""

  if sudo /run/current-system/sw/bin/nixos-rebuild switch --flake ".#$FLAKE_TARGET" $OTHER_ARGS; then
    _print ""
    _print "${GREEN}╔═══════════════════════════════════════════╗${NC}"
    _print "${GREEN}║  ✓ NixOS switch complete!                ║${NC}"
    _print "${GREEN}╚═══════════════════════════════════════════╝${NC}"
    _print ""
  else
    _print ""
    _print "${RED}╔═══════════════════════════════════════════╗${NC}"
    _print "${RED}║  ✗ NixOS switch failed                   ║${NC}"
    _print "${RED}╚═══════════════════════════════════════════╝${NC}"
    exit 1
  fi
else
  # Standalone Linux - use Home Manager
  # Check if Home Manager is installed
  if ! command -v home-manager &> /dev/null; then
    _print "${YELLOW}Home Manager not found. Installing...${NC}"
    nix run home-manager/master -- init --switch
    _print "${GREEN}✓ Home Manager installed.${NC}"
    _print ""
  fi

  _print "${BLUE}Running: home-manager switch --flake .#$FLAKE_TARGET $OTHER_ARGS${NC}"
  _print ""

  # Temporarily set HOME to match the flake configuration
  export ORIGINAL_HOME="$HOME"
  export HOME="/home/${USERNAME}"

  if home-manager switch --flake ".#$FLAKE_TARGET" $OTHER_ARGS; then
    # Restore original HOME
    export HOME="$ORIGINAL_HOME"
    _print ""
    _print "${GREEN}╔═══════════════════════════════════════════╗${NC}"
    _print "${GREEN}║  ✓ Home Manager switch complete!         ║${NC}"
    _print "${GREEN}╚═══════════════════════════════════════════╝${NC}"
    _print ""
    _print "${GREEN}Configuration applied successfully.${NC}"
    _print "${YELLOW}Tip: Restart your terminal to load new shell: ${BLUE}exec \$SHELL${NC}"
    _print ""
  else
    # Restore original HOME even on failure
    export HOME="$ORIGINAL_HOME"
    _print ""
    _print "${RED}╔═══════════════════════════════════════════╗${NC}"
    _print "${RED}║  ✗ Home Manager switch failed            ║${NC}"
    _print "${RED}╚═══════════════════════════════════════════╝${NC}"
    exit 1
  fi
fi
